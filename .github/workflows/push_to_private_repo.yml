name: Push to private repo

on:
  push:
    branches:
      - main

jobs:
  check-repo:
    name: Check that the current repo is not the target repo
    runs-on: ubuntu-latest
    outputs:
      target_repo: ${{ steps.setvar.outputs.target_repo }}
    steps:
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDDHHmmssSSS
          utcOffset: "+08:00"
      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          R_TIME: "${{ steps.current-time.outputs.readableTime }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
          YEAR: "${{ steps.current-time.outputs.year }}"
          DAY: "${{ steps.current-time.outputs.day }}"
        run: echo $TIME $R_TIME $F_TIME $YEAR $DAY ${GITHUB_REF##*/}
      - id: setvar
        run: |
          if [[ "${{ secrets.ORG_NAME_AND_PRIV_REPO_NAME }}" == "${{github.repository}}" || "${{ secrets.ORG_NAME_AND_PRIV_REPO_NAME }}" == "" ]]
          then
            echo "Repo is target repo"
            echo "::set-output name=target_repo::true"
          else
            echo "Repo is not the target repo"
            echo "::set-output name=target_repo::false"
          fi
  update-private-repo:
    name: Push local main to privrepo main
    needs: [check-repo]

    # Format should be ${MyOrgName}/${MyOrgRepoName}
    if: needs.check-repo.outputs.target_repo == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
          fetch-depth: 0
      - name: Add repo and push local main to private main
        run: |
          git remote add privrepo ${{ secrets.PRIVATE_REPO_URL }}
          git push privrepo main
